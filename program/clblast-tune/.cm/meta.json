{
  "force_copy_input_files_to_remote":"yes",
  "data_name": "clblast",
  "no_compile": "yes",
  "no_target_file": "yes", 
  "only_for_target_os_tags": [
    "linux",
    "windows",
    "android" 
  ],
  "compiler_add_include_as_env_from_deps": [
    "CK_ENV_LIB_STDCPP_INCLUDE",
    "CK_ENV_LIB_STDCPP_INCLUDE_EXTRA",
    "CK_ENV_LIB_STDCPP_DYNAMIC"
  ],
  "extra_ld_vars": "$<<CK_ENV_LIB_STDCPP_DYNAMIC>>$ $<<CK_ENV_LIB_STDCPP_STATIC>>$",
  "print_files_after_run": [
    "stderr.log"
  ],
  "process_in_tmp": "yes",
  "program": "yes",
  "run_cmds": {
    "default": {
      "ignore_return_code": "no",
      "run_time": {
        "need_compute_device": "opencl", 
        "post_process_via_ck": "no",
        "pre_process_cmds": [
        ],
        "run_cmd_main": "$<<CK_ENV_LIB_CLBLAST>>$/bin/clblast_tuner_xgemm -platform $<<CK_COMPUTE_PLATFORM_ID>>$ -device $<<CK_COMPUTE_DEVICE_ID>>$ -runs $<<CK_CLBLAST_ITERATIONS>>$ -m $<<CK_CLBLAST_MSIZE>>$ -n $<<CK_CLBLAST_NSIZE>>$ -k $<<CK_CLBLAST_KSIZE>>$",
        "run_cmd_main_remote": "chmod 755 ./clblast_tuner_xgemm ; ./clblast_tuner_xgemm -platform $<<CK_COMPUTE_PLATFORM_ID>>$ -device $<<CK_COMPUTE_DEVICE_ID>>$ -runs $<<CK_CLBLAST_ITERATIONS>>$ -m $<<CK_CLBLAST_MSIZE>>$ -n $<<CK_CLBLAST_NSIZE>>$ -k $<<CK_CLBLAST_KSIZE>>$",
        "run_cmd_out1": "stdout.log",
        "run_cmd_out2": "stderr.log",
        "run_input_files": [
          "$<<CK_ENV_LIB_CLBLAST>>$/bin/clblast_tuner_xgemm",
          "$<<CK_ENV_LIB_STDCPP_DYNAMIC>>$"
        ],
        "run_output_files": [
          "gem-stderr",
          "gem-stedout"
        ]
      }
    }
  },
  "run_deps": {
    "compiler": {
      "local": "yes", 
      "name": "C++ compiler", 
      "sort": 0, 
      "tags": "compiler,lang-cpp"
    }, 
    "tool-cltune": {
     "local": "yes",
     "name": "CLTune tool",
     "sort": 40,
     "tags": "tool,cltune" 
    },
    "opencl": {
      "local": "yes",
      "name": "OpenCL library",
      "sort": 20,
      "tags": "lib,opencl" 
    },
    "lib-clblast": {
      "local": "yes",
      "name": "CLBlast library",
      "sort": 10,
      "tags": "lib,clblast-tune"
    }
  },
  "run_vars": {
    "CK_COMPUTE_DEVICE_ID": 0, 
    "CK_COMPUTE_PLATFORM_ID": 0, 
    "CK_CLBLAST_ITERATIONS": 1,
    "CK_CLBLAST_MSIZE": 256,
    "CK_CLBLAST_NSIZE": 256,
    "CK_CLBLAST_KSIZE": 256

  },
  "tags": [
    "clblast",
    "cltune"
  ]
}




